{
	"compiler": {
		"version": "0.8.10+commit.fc410830"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "contract TransparentUpgradeableProxy",
						"name": "proxy",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "changeProxyAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract TransparentUpgradeableProxy",
						"name": "proxy",
						"type": "address"
					}
				],
				"name": "getProxyAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract TransparentUpgradeableProxy",
						"name": "proxy",
						"type": "address"
					}
				],
				"name": "getProxyImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract TransparentUpgradeableProxy",
						"name": "proxy",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "upgrade",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract TransparentUpgradeableProxy",
						"name": "proxy",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeAndCall",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.",
			"kind": "dev",
			"methods": {
				"changeProxyAdmin(address,address)": {
					"details": "Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`."
				},
				"getProxyAdmin(address)": {
					"details": "Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`."
				},
				"getProxyImplementation(address)": {
					"details": "Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"upgrade(address,address)": {
					"details": "Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`."
				},
				"upgradeAndCall(address,address,bytes)": {
					"details": "Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"proxy/ProxyAdmin.sol": "ProxyAdmin"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"proxy/ERC1967/ERC1967Proxy.sol": {
			"keccak256": "0x31e9e48553bd346b7e423a37c7b7ff132993f996a6dd352dcb6f96c9faed5c5d",
			"license": "MIT",
			"urls": [
				"bzz-raw://8febce05cda10f9bedff3271718108c0297e80e22cc462c7b3dc66703ba83292",
				"dweb:/ipfs/QmZqxTfX7BAGVfkHWCz98PTouZ23GCjMBw2VCdU8pk8Z8x"
			]
		},
		"proxy/ERC1967/ERC1967Upgrade.sol": {
			"keccak256": "0xf846804af5d126646db3e0aadcaf245cef7f9297b381a9db756975c016d856ae",
			"license": "MIT",
			"urls": [
				"bzz-raw://eac378be1e2eb05ab4af5819c2553c2e75820a0ebdfe60b6b473f210d6ece7ed",
				"dweb:/ipfs/QmaERcqDG7bSCmBKg2R63M26NxCJbUa2xM9v1FZTZUUG6Z"
			]
		},
		"proxy/ERC1967/IBeacon.sol": {
			"keccak256": "0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0",
			"license": "MIT",
			"urls": [
				"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f",
				"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM"
			]
		},
		"proxy/Proxy.sol": {
			"keccak256": "0x1b9788d2f62369d55aef39442b0a8c9b05114ff6cb0c59b4f0f4485d1648f0f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://35d1f8588cf1c70820a1aa2249862d663db591327cc0f94efad1d615c3ec76b4",
				"dweb:/ipfs/QmT4FW1G1unTdr7MTNHaUvDndjrM5Gj5AYcFMvkvq3HnXh"
			]
		},
		"proxy/ProxyAdmin.sol": {
			"keccak256": "0x215aa64a4f6419242af9b9defdbc730df4fae3e261457f318f03eeba583299b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://fa7db458ec95d4c12510bd898132d1dfbffd0bdf3451c527abb8f98fee3eea5e",
				"dweb:/ipfs/QmPToNbaoTJ1dPGUiFUiTGTinA8Y7ZrgkU5jK73RefVaEi"
			]
		},
		"proxy/TransparentUpgradeableProxy.sol": {
			"keccak256": "0x66428d04d9f89a6b9a317e3e32976afddea57456b40d3e3df802eb65d569ea06",
			"license": "MIT",
			"urls": [
				"bzz-raw://306d6d00ef1580990132f7367be5e0d677ddb99a0536533c98b913080a8a7f54",
				"dweb:/ipfs/QmaUghmkJ4FRiRHLqbgKEqQyuDYnAuj7vv26C5tSFe254g"
			]
		},
		"utils/Address.sol": {
			"keccak256": "0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666",
				"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR"
			]
		},
		"utils/StorageSlot.sol": {
			"keccak256": "0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50",
			"license": "MIT",
			"urls": [
				"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315",
				"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo"
			]
		}
	},
	"version": 1
}